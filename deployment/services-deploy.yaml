apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload
spec:
  replicas: 3
  selector:
    matchLabels:
      app: upload
  template:
    metadata:
      labels:
        app: upload
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: upload
          image: kagaya85/starlight-upload:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9091
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: upload-config
              mountPath: /data/conf
      volumes:
        - name: upload-config
          configMap:
            name: upload-config

---
apiVersion: v1
kind: Service
metadata:
  name: upload
  labels:
    app: upload
spec:
  ports:
    - port: 9091
      targetPort: 9091
      nodePort: 30091
      protocol: TCP
      name: grpc
  selector:
    app: upload
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: process
spec:
  replicas: 3
  selector:
    matchLabels:
      app: process
  template:
    metadata:
      labels:
        app: process
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: process
          image: kagaya85/starlight-process:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9092
              protocol: TCP
            - name: metrics
              containerPort: 8082
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: process-config
              mountPath: /data/conf
      volumes:
        - name: process-config
          configMap:
            name: process-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: push
spec:
  replicas: 3
  selector:
    matchLabels:
      app: push
  template:
    metadata:
      labels:
        app: push
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8083"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: push
          image: kagaya85/starlight-push:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9093
              protocol: TCP
            - name: metrics
              containerPort: 8083
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: push-config
              mountPath: /data/conf
      volumes:
        - name: push-config
          configMap:
            name: push-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audit
  template:
    metadata:
      labels:
        app: audit
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8084"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: audit
          image: kagaya85/starlight-audit:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9094
              protocol: TCP
            - name: metrics
              containerPort: 8084
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: audit-config
              mountPath: /data/conf
      volumes:
        - name: audit-config
          configMap:
            name: audit-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcode
spec:
  replicas: 3
  selector:
    matchLabels:
      app: transcode
  template:
    metadata:
      labels:
        app: transcode
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8085"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: transcode
          image: kagaya85/starlight-transcode:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: metrics
              containerPort: 8085
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: transcode-config
              mountPath: /data/conf
      volumes:
        - name: transcode-config
          configMap:
            name: transcode-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage
spec:
  replicas: 3
  selector:
    matchLabels:
      app: storage
  template:
    metadata:
      labels:
        app: storage
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8086"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: storage
          image: kagaya85/starlight-storage:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9096
              protocol: TCP
            - name: metrics
              containerPort: 8086
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: storage-config
              mountPath: /data/conf
      volumes:
        - name: storage-config
          configMap:
            name: storage-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeline
spec:
  replicas: 3
  selector:
    matchLabels:
      app: timeline
  template:
    metadata:
      labels:
        app: timeline
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8087"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: timeline
          image: kagaya85/starlight-timeline:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9097
              protocol: TCP
            - name: metrics
              containerPort: 8087
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: timeline-config
              mountPath: /data/conf
      volumes:
        - name: timeline-config
          configMap:
            name: timeline-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: distribution
spec:
  replicas: 3
  selector:
    matchLabels:
      app: distribution
  template:
    metadata:
      labels:
        app: distribution
        zone: cn-shanghai
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: distribution
          image: kagaya85/starlight-distribution:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: grpc
              containerPort: 9098
              protocol: TCP
            - name: metrics
              containerPort: 8088
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ZONE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['zone']
          volumeMounts:
            - name: distribution-config
              mountPath: /data/conf
      volumes:
        - name: distribution-config
          configMap:
            name: distribution-config
